{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
            "id": "NUGET_API_KEY",
            "description": "NUGET_API_KEY?",
            "type": "promptString",
            "default": "xxx",
        },
        {
            "id": "MODULE_VERSION",
            "description": "MODULE_VERSION?",
            "type": "promptString",
            "default": "0.0.0",
        },
    ],
    "tasks": [
        {
            "label": "Test PSModulePublisher with separate module (pwsh)",
            "type": "shell",
            "command": "pwsh -Command test/test.ps1",
            "group": "build"
        },
        {
            "label": "Test PSModulePublisher with separate module (powershell)",
            "type": "shell",
            "command": "powershell -Command test/test.ps1",
            "group": "build"
        },
        {
            "label": "Build PSModulePublisher",
            "type": "shell",
            "command": "MODULE_VERSION=\"${input:MODULE_VERSION}\" pwsh -c 'Import-Module ./src/PSModulePublisher/PSModulePublisher.psm1 -Force; Invoke-Build'",
            "group": "build"
        },
        {
            "label": "Publish PSModulePublisher (dry run)",
            "dependsOn":[
                "Build PSModulePublisher"
            ],
            "type": "shell",
            "command": "NUGET_API_KEY=\"${input:NUGET_API_KEY}\" MODULE_VERSION=\"${input:MODULE_VERSION}\" pwsh -c 'Import-Module ./src/PSModulePublisher/PSModulePublisher.psm1 -Force; $moduleManifest = Invoke-Build; Invoke-Publish -ModuleManifestPath $moduleManifest -Repository PSGallery -DryRun'",
            "group": "build"
        },
        {
            "label": "Publish PSModulePublisher",
            "dependsOn":[
                "Build PSModulePublisher"
            ],
            "type": "shell",
            "command": "NUGET_API_KEY=\"${input:NUGET_API_KEY}\" MODULE_VERSION=\"${input:MODULE_VERSION}\" pwsh -c 'Import-Module ./src/PSModulePublisher/PSModulePublisher.psm1 -Force; $moduleManifest = Invoke-Build; Invoke-Publish -ModuleManifestPath $moduleManifest -Repository PSGallery'",
            "group": "build"
        },
    ]
}
